
AVRASM ver. 2.1.30  C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm Thu Dec 21 18:47:58 2023

C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm(1417): warning: Register r5 already defined by the .DEF directive
C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm(1418): warning: Register r4 already defined by the .DEF directive
C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm(1419): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.52 Evaluation
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0043 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6425
C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm(1457): warning: .cseg .db misalignment - padding zero byte
000034 0000      	.DB  0x25,0x64,0x0
                 _0x2040060:
C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm(1459): warning: .cseg .db misalignment - padding zero byte
000035 0001      	.DB  0x1
                 _0x2040000:
000036 4e2d
000037 4e41
000038 4900
000039 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ahmedharres\Desktop\Project-2\Debug\List\LCD_KEYPAD.asm(1462): warning: .cseg .db misalignment - padding zero byte
00003a 0000      	.DB  0x0
                 _0x2060003:
00003b c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003c 0001      	.DW  0x01
00003d 0160      	.DW  __seed_G102
00003e 006a      	.DW  _0x2040060*2
                 
00003f 0002      	.DW  0x02
000040 0164      	.DW  __base_y_G103
000041 0076      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
000042 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000043 94f8      	CLI
000044 27ee      	CLR  R30
000045 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000046 e0f1      	LDI  R31,1
000047 bffb      	OUT  GICR,R31
000048 bfeb      	OUT  GICR,R30
000049 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004a e08d      	LDI  R24,(14-2)+1
00004b e0a2      	LDI  R26,2
00004c 27bb      	CLR  R27
                 __CLEAR_REG:
00004d 93ed      	ST   X+,R30
00004e 958a      	DEC  R24
00004f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000050 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000051 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000052 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000053 93ed      	ST   X+,R30
000054 9701      	SBIW R24,1
000055 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000056 e7e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000057 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000058 9185      	LPM  R24,Z+
000059 9195      	LPM  R25,Z+
00005a 9700      	SBIW R24,0
00005b f061      	BREQ __GLOBAL_INI_END
00005c 91a5      	LPM  R26,Z+
00005d 91b5      	LPM  R27,Z+
00005e 9005      	LPM  R0,Z+
00005f 9015      	LPM  R1,Z+
000060 01bf      	MOVW R22,R30
000061 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000062 9005      	LPM  R0,Z+
000063 920d      	ST   X+,R0
000064 9701      	SBIW R24,1
000065 f7e1      	BRNE __GLOBAL_INI_LOOP
000066 01fb      	MOVW R30,R22
000067 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000068 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000069 bfed      	OUT  SPL,R30
00006a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006e 940c 0070 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;char Keypad();
                 ;void main(void)
                 ; 0000 0011 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0012 int lcd_position = 0;  // Track the LCD position
                 ; 0000 0013 char number;
                 ; 0000 0014 DDRC = 0b00000111;
                 ;	lcd_position -> R16,R17
                 ;	number -> R19
                +
000070 e000     +LDI R16 , LOW ( 0 )
000071 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000072 e0e7      	LDI  R30,LOW(7)
000073 bbe4      	OUT  0x14,R30
                 ; 0000 0015 PORTC = 0b11111000;
000074 efe8      	LDI  R30,LOW(248)
000075 bbe5      	OUT  0x15,R30
                 ; 0000 0016 lcd_init(16);
000076 e1a0      	LDI  R26,LOW(16)
000077 d24c      	RCALL _lcd_init
                 ; 0000 0017 while (1)
                 _0x3:
                 ; 0000 0018 {
                 ; 0000 0019 // Please write your application code here
                 ; 0000 001A number = Keypad();
000078 d026      	RCALL _Keypad
000079 2f3e      	MOV  R19,R30
                 ; 0000 001B 
                 ; 0000 001C // Display the pressed number on the LCD
                 ; 0000 001D lcd_gotoxy(lcd_position % 16, lcd_position / 16);  // Set LCD position
00007a 01f8      	MOVW R30,R16
00007b e0af      	LDI  R26,LOW(15)
00007c e0b0      	LDI  R27,HIGH(15)
00007d d2c3      	RCALL __MANDW12
00007e 93ea      	ST   -Y,R30
00007f 01d8      	MOVW R26,R16
000080 e1e0      	LDI  R30,LOW(16)
000081 e0f0      	LDI  R31,HIGH(16)
000082 d2b9      	RCALL __DIVW21
000083 2fae      	MOV  R26,R30
000084 d210      	RCALL _lcd_gotoxy
                 ; 0000 001E lcd_printf("%d", number);
                +
000085 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000086 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000087 93fa      	ST   -Y,R31
000088 93ea      	ST   -Y,R30
000089 2fe3      	MOV  R30,R19
00008a 27ff      	CLR  R31
00008b 2766      	CLR  R22
00008c 2777      	CLR  R23
00008d d2cf      	RCALL __PUTPARD1
00008e e084      	LDI  R24,4
00008f d1a3      	RCALL _lcd_printf
000090 9626      	ADIW R28,6
                 ; 0000 001F 
                 ; 0000 0020 // Increment the LCD position
                 ; 0000 0021 lcd_position++;
                +
000091 5f0f     +SUBI R16 , LOW ( - 1 )
000092 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0022 
                 ; 0000 0023 // If the LCD is full, clear it and start over
                 ; 0000 0024 if (lcd_position >= 16 * 2)
                +
000093 3200     +CPI R16 , LOW ( 32 )
000094 e0e0     +LDI R30 , HIGH ( 32 )
000095 071e     +CPC R17 , R30
                 	__CPWRN 16,17,32
000096 f01c      	BRLT _0x6
                 ; 0000 0025 {
                 ; 0000 0026 lcd_clear();
000097 d20f      	RCALL _lcd_clear
                 ; 0000 0027 lcd_position = 0;
                +
000098 e000     +LDI R16 , LOW ( 0 )
000099 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 0028 }
                 ; 0000 0029 
                 ; 0000 002A // Delay to prevent multiple inputs in a short time
                 ; 0000 002B delay_ms(500);
                 _0x6:
00009a efa4      	LDI  R26,LOW(500)
00009b e0b1      	LDI  R27,HIGH(500)
00009c d2c5      	RCALL _delay_ms
                 ; 0000 002C }
00009d cfda      	RJMP _0x3
                 ; 0000 002D }
                 _0x7:
00009e cfff      	RJMP _0x7
                 ; .FEND
                 ;char Keypad()
                 ; 0000 0033 {
                 _Keypad:
                 ; .FSTART _Keypad
                 ; 0000 0034 while (1)
                 _0x8:
                 ; 0000 0035 {
                 ; 0000 0036 PORTC.0 = 0; // col 1 is active
00009f 98a8      	CBI  0x15,0
                 ; 0000 0037 PORTC.1 = 1; // col 2 is inactive
0000a0 9aa9      	SBI  0x15,1
                 ; 0000 0038 PORTC.2 = 1; // col 3 is inactive
0000a1 9aaa      	SBI  0x15,2
                 ; 0000 0039 switch (PINC)
0000a2 b3e3      	IN   R30,0x13
                 ; 0000 003A {
                 ; 0000 003B case 0b11110110:
0000a3 3fe6      	CPI  R30,LOW(0xF6)
0000a4 f429      	BRNE _0x14
                 ; 0000 003C while (PINC.3 == 0);
                 _0x15:
0000a5 9b9b      	SBIS 0x13,3
0000a6 cffe      	RJMP _0x15
                 ; 0000 003D return 1;
0000a7 e0e1      	LDI  R30,LOW(1)
0000a8 9508      	RET
                 ; 0000 003E break;
0000a9 c014      	RJMP _0x13
                 ; 0000 003F 
                 ; 0000 0040 case 0b11101110:
                 _0x14:
0000aa 3eee      	CPI  R30,LOW(0xEE)
0000ab f429      	BRNE _0x18
                 ; 0000 0041 while (PINC.4 == 0);
                 _0x19:
0000ac 9b9c      	SBIS 0x13,4
0000ad cffe      	RJMP _0x19
                 ; 0000 0042 return 4;
0000ae e0e4      	LDI  R30,LOW(4)
0000af 9508      	RET
                 ; 0000 0043 break;
0000b0 c00d      	RJMP _0x13
                 ; 0000 0044 
                 ; 0000 0045 case 0b11011110:
                 _0x18:
0000b1 3dee      	CPI  R30,LOW(0xDE)
0000b2 f429      	BRNE _0x1C
                 ; 0000 0046 while (PINC.5 == 0);
                 _0x1D:
0000b3 9b9d      	SBIS 0x13,5
0000b4 cffe      	RJMP _0x1D
                 ; 0000 0047 return 7;
0000b5 e0e7      	LDI  R30,LOW(7)
0000b6 9508      	RET
                 ; 0000 0048 break;
0000b7 c006      	RJMP _0x13
                 ; 0000 0049 
                 ; 0000 004A case 0b10111110:
                 _0x1C:
0000b8 3bee      	CPI  R30,LOW(0xBE)
0000b9 f421      	BRNE _0x13
                 ; 0000 004B while (PINC.6 == 0);
                 _0x21:
0000ba 9b9e      	SBIS 0x13,6
0000bb cffe      	RJMP _0x21
                 ; 0000 004C return 10; // '*' is returned as 10
0000bc e0ea      	LDI  R30,LOW(10)
0000bd 9508      	RET
                 ; 0000 004D break;
                 ; 0000 004E }
                 _0x13:
                 ; 0000 004F 
                 ; 0000 0050 PORTC.0 = 1; // col 1 is inactive
0000be 9aa8      	SBI  0x15,0
                 ; 0000 0051 PORTC.1 = 0; // col 2 is active
0000bf 98a9      	CBI  0x15,1
                 ; 0000 0052 PORTC.2 = 1; // col 3 is inactive
0000c0 9aaa      	SBI  0x15,2
                 ; 0000 0053 switch (PINC)
0000c1 b3e3      	IN   R30,0x13
                 ; 0000 0054 {
                 ; 0000 0055 case 0b11110101:
0000c2 3fe5      	CPI  R30,LOW(0xF5)
0000c3 f429      	BRNE _0x2D
                 ; 0000 0056 while (PINC.3 == 0);
                 _0x2E:
0000c4 9b9b      	SBIS 0x13,3
0000c5 cffe      	RJMP _0x2E
                 ; 0000 0057 return 2;
0000c6 e0e2      	LDI  R30,LOW(2)
0000c7 9508      	RET
                 ; 0000 0058 break;
0000c8 c014      	RJMP _0x2C
                 ; 0000 0059 
                 ; 0000 005A case 0b11101101:
                 _0x2D:
0000c9 3eed      	CPI  R30,LOW(0xED)
0000ca f429      	BRNE _0x31
                 ; 0000 005B while (PINC.4 == 0);
                 _0x32:
0000cb 9b9c      	SBIS 0x13,4
0000cc cffe      	RJMP _0x32
                 ; 0000 005C return 5;
0000cd e0e5      	LDI  R30,LOW(5)
0000ce 9508      	RET
                 ; 0000 005D break;
0000cf c00d      	RJMP _0x2C
                 ; 0000 005E 
                 ; 0000 005F case 0b11011101:
                 _0x31:
0000d0 3ded      	CPI  R30,LOW(0xDD)
0000d1 f429      	BRNE _0x35
                 ; 0000 0060 while (PINC.5 == 0);
                 _0x36:
0000d2 9b9d      	SBIS 0x13,5
0000d3 cffe      	RJMP _0x36
                 ; 0000 0061 return 8;
0000d4 e0e8      	LDI  R30,LOW(8)
0000d5 9508      	RET
                 ; 0000 0062 break;
0000d6 c006      	RJMP _0x2C
                 ; 0000 0063 
                 ; 0000 0064 case 0b10111101:
                 _0x35:
0000d7 3bed      	CPI  R30,LOW(0xBD)
0000d8 f421      	BRNE _0x2C
                 ; 0000 0065 while (PINC.6 == 0);
                 _0x3A:
0000d9 9b9e      	SBIS 0x13,6
0000da cffe      	RJMP _0x3A
                 ; 0000 0066 return 0;
0000db e0e0      	LDI  R30,LOW(0)
0000dc 9508      	RET
                 ; 0000 0067 break;
                 ; 0000 0068 }
                 _0x2C:
                 ; 0000 0069 
                 ; 0000 006A PORTC.0 = 1; // col 1 is inactive
0000dd 9aa8      	SBI  0x15,0
                 ; 0000 006B PORTC.1 = 1; // col 2 is inactive
0000de 9aa9      	SBI  0x15,1
                 ; 0000 006C PORTC.2 = 0; // col 3 is active
0000df 98aa      	CBI  0x15,2
                 ; 0000 006D switch (PINC)
0000e0 b3e3      	IN   R30,0x13
                 ; 0000 006E {
                 ; 0000 006F case 0b11110011:
0000e1 3fe3      	CPI  R30,LOW(0xF3)
0000e2 f429      	BRNE _0x46
                 ; 0000 0070 while (PINC.3 == 0);
                 _0x47:
0000e3 9b9b      	SBIS 0x13,3
0000e4 cffe      	RJMP _0x47
                 ; 0000 0071 return 3;
0000e5 e0e3      	LDI  R30,LOW(3)
0000e6 9508      	RET
                 ; 0000 0072 break;
0000e7 c014      	RJMP _0x45
                 ; 0000 0073 
                 ; 0000 0074 case 0b11101011:
                 _0x46:
0000e8 3eeb      	CPI  R30,LOW(0xEB)
0000e9 f429      	BRNE _0x4A
                 ; 0000 0075 while (PINC.4 == 0);
                 _0x4B:
0000ea 9b9c      	SBIS 0x13,4
0000eb cffe      	RJMP _0x4B
                 ; 0000 0076 return 6;
0000ec e0e6      	LDI  R30,LOW(6)
0000ed 9508      	RET
                 ; 0000 0077 break;
0000ee c00d      	RJMP _0x45
                 ; 0000 0078 
                 ; 0000 0079 case 0b11011011:
                 _0x4A:
0000ef 3deb      	CPI  R30,LOW(0xDB)
0000f0 f429      	BRNE _0x4E
                 ; 0000 007A while (PINC.5 == 0);
                 _0x4F:
0000f1 9b9d      	SBIS 0x13,5
0000f2 cffe      	RJMP _0x4F
                 ; 0000 007B return 9;
0000f3 e0e9      	LDI  R30,LOW(9)
0000f4 9508      	RET
                 ; 0000 007C break;
0000f5 c006      	RJMP _0x45
                 ; 0000 007D 
                 ; 0000 007E case 0b110111011:
                 _0x4E:
0000f6 3beb      	CPI  R30,LOW(0x1BB)
0000f7 f421      	BRNE _0x45
                 ; 0000 007F while (PINC.6 == 0);
                 _0x53:
0000f8 9b9e      	SBIS 0x13,6
0000f9 cffe      	RJMP _0x53
                 ; 0000 0080 return 11; // '#' is returned as 11
0000fa e0eb      	LDI  R30,LOW(11)
0000fb 9508      	RET
                 ; 0000 0081 break;
                 ; 0000 0082 }
                 _0x45:
                 ; 0000 0083 }
0000fc cfa2      	RJMP _0x8
                 ; 0000 0084 }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G100:
                 ; .FSTART __print_G100
0000fd 93ba      	ST   -Y,R27
0000fe 93aa      	ST   -Y,R26
0000ff 9726      	SBIW R28,6
000100 d216      	RCALL __SAVELOCR6
000101 e010      	LDI  R17,0
000102 85ac      	LDD  R26,Y+12
000103 85bd      	LDD  R27,Y+12+1
000104 e0e0      	LDI  R30,LOW(0)
000105 e0f0      	LDI  R31,HIGH(0)
000106 93ed      	ST   X+,R30
000107 93fc      	ST   X,R31
                 _0x2000016:
000108 89ea      	LDD  R30,Y+18
000109 89fb      	LDD  R31,Y+18+1
00010a 9631      	ADIW R30,1
00010b 8bea      	STD  Y+18,R30
00010c 8bfb      	STD  Y+18+1,R31
00010d 9731      	SBIW R30,1
00010e 91e4      	LPM  R30,Z
00010f 2f2e      	MOV  R18,R30
000110 30e0      	CPI  R30,0
000111 f409      	BRNE PC+2
000112 c10b      	RJMP _0x2000018
000113 2fe1      	MOV  R30,R17
000114 30e0      	CPI  R30,0
000115 f431      	BRNE _0x200001C
000116 3225      	CPI  R18,37
000117 f411      	BRNE _0x200001D
000118 e011      	LDI  R17,LOW(1)
000119 c001      	RJMP _0x200001E
                 _0x200001D:
00011a d1d4      	RCALL SUBOPT_0x0
                 _0x200001E:
00011b c101      	RJMP _0x200001B
                 _0x200001C:
00011c 30e1      	CPI  R30,LOW(0x1)
00011d f4a1      	BRNE _0x200001F
00011e 3225      	CPI  R18,37
00011f f411      	BRNE _0x2000020
000120 d1ce      	RCALL SUBOPT_0x0
000121 c0fa      	RJMP _0x20000CC
                 _0x2000020:
000122 e012      	LDI  R17,LOW(2)
000123 e040      	LDI  R20,LOW(0)
000124 e000      	LDI  R16,LOW(0)
000125 322d      	CPI  R18,45
000126 f411      	BRNE _0x2000021
000127 e001      	LDI  R16,LOW(1)
000128 c0f4      	RJMP _0x200001B
                 _0x2000021:
000129 322b      	CPI  R18,43
00012a f411      	BRNE _0x2000022
00012b e24b      	LDI  R20,LOW(43)
00012c c0f0      	RJMP _0x200001B
                 _0x2000022:
00012d 3220      	CPI  R18,32
00012e f411      	BRNE _0x2000023
00012f e240      	LDI  R20,LOW(32)
000130 c0ec      	RJMP _0x200001B
                 _0x2000023:
000131 c002      	RJMP _0x2000024
                 _0x200001F:
000132 30e2      	CPI  R30,LOW(0x2)
000133 f439      	BRNE _0x2000025
                 _0x2000024:
000134 e050      	LDI  R21,LOW(0)
000135 e013      	LDI  R17,LOW(3)
000136 3320      	CPI  R18,48
000137 f411      	BRNE _0x2000026
000138 6800      	ORI  R16,LOW(128)
000139 c0e3      	RJMP _0x200001B
                 _0x2000026:
00013a c003      	RJMP _0x2000027
                 _0x2000025:
00013b 30e3      	CPI  R30,LOW(0x3)
00013c f009      	BREQ PC+2
00013d c0df      	RJMP _0x200001B
                 _0x2000027:
00013e 3320      	CPI  R18,48
00013f f010      	BRLO _0x200002A
000140 332a      	CPI  R18,58
000141 f008      	BRLO _0x200002B
                 _0x200002A:
000142 c007      	RJMP _0x2000029
                 _0x200002B:
000143 e0aa      	LDI  R26,LOW(10)
000144 9f5a      	MUL  R21,R26
000145 2d50      	MOV  R21,R0
000146 2fe2      	MOV  R30,R18
000147 53e0      	SUBI R30,LOW(48)
000148 0f5e      	ADD  R21,R30
000149 c0d3      	RJMP _0x200001B
                 _0x2000029:
00014a 2fe2      	MOV  R30,R18
00014b 36e3      	CPI  R30,LOW(0x63)
00014c f439      	BRNE _0x200002F
00014d d1a8      	RCALL SUBOPT_0x1
00014e 89e8      	LDD  R30,Y+16
00014f 89f9      	LDD  R31,Y+16+1
000150 81a4      	LDD  R26,Z+4
000151 93aa      	ST   -Y,R26
000152 d1a9      	RCALL SUBOPT_0x2
000153 c0c8      	RJMP _0x2000030
                 _0x200002F:
000154 37e3      	CPI  R30,LOW(0x73)
000155 f429      	BRNE _0x2000032
000156 d19f      	RCALL SUBOPT_0x1
000157 d1aa      	RCALL SUBOPT_0x3
000158 d101      	RCALL _strlen
000159 2f1e      	MOV  R17,R30
00015a c007      	RJMP _0x2000033
                 _0x2000032:
00015b 37e0      	CPI  R30,LOW(0x70)
00015c f449      	BRNE _0x2000035
00015d d198      	RCALL SUBOPT_0x1
00015e d1a3      	RCALL SUBOPT_0x3
00015f d106      	RCALL _strlenf
000160 2f1e      	MOV  R17,R30
000161 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000162 6002      	ORI  R16,LOW(2)
000163 770f      	ANDI R16,LOW(127)
000164 e030      	LDI  R19,LOW(0)
000165 c03a      	RJMP _0x2000036
                 _0x2000035:
000166 36e4      	CPI  R30,LOW(0x64)
000167 f011      	BREQ _0x2000039
000168 36e9      	CPI  R30,LOW(0x69)
000169 f411      	BRNE _0x200003A
                 _0x2000039:
00016a 6004      	ORI  R16,LOW(4)
00016b c002      	RJMP _0x200003B
                 _0x200003A:
00016c 37e5      	CPI  R30,LOW(0x75)
00016d f431      	BRNE _0x200003C
                 _0x200003B:
00016e e5e4      	LDI  R30,LOW(_tbl10_G100*2)
00016f e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000170 83ee      	STD  Y+6,R30
000171 83ff      	STD  Y+6+1,R31
000172 e015      	LDI  R17,LOW(5)
000173 c00c      	RJMP _0x200003D
                 _0x200003C:
000174 35e8      	CPI  R30,LOW(0x58)
000175 f411      	BRNE _0x200003F
000176 6008      	ORI  R16,LOW(8)
000177 c003      	RJMP _0x2000040
                 _0x200003F:
000178 37e8      	CPI  R30,LOW(0x78)
000179 f009      	BREQ PC+2
00017a c0a1      	RJMP _0x2000071
                 _0x2000040:
00017b e5ee      	LDI  R30,LOW(_tbl16_G100*2)
00017c e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00017d 83ee      	STD  Y+6,R30
00017e 83ff      	STD  Y+6+1,R31
00017f e014      	LDI  R17,LOW(4)
                 _0x200003D:
000180 ff02      	SBRS R16,2
000181 c015      	RJMP _0x2000042
000182 d173      	RCALL SUBOPT_0x1
000183 89a8      	LDD  R26,Y+16
000184 89b9      	LDD  R27,Y+16+1
000185 9614      	ADIW R26,4
000186 91ed      	LD   R30,X+
000187 91fd      	LD   R31,X+
000188 87ea      	STD  Y+10,R30
000189 87fb      	STD  Y+10+1,R31
00018a 85ab      	LDD  R26,Y+11
00018b 23aa      	TST  R26
00018c f422      	BRPL _0x2000043
00018d d197      	RCALL __ANEGW1
00018e 87ea      	STD  Y+10,R30
00018f 87fb      	STD  Y+10+1,R31
000190 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000191 3040      	CPI  R20,0
000192 f011      	BREQ _0x2000044
000193 5f1f      	SUBI R17,-LOW(1)
000194 c001      	RJMP _0x2000045
                 _0x2000044:
000195 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000196 c009      	RJMP _0x2000046
                 _0x2000042:
000197 d15e      	RCALL SUBOPT_0x1
000198 89a8      	LDD  R26,Y+16
000199 89b9      	LDD  R27,Y+16+1
00019a 9614      	ADIW R26,4
                +
00019b 91ed     +LD R30 , X +
00019c 91fc     +LD R31 , X
00019d 9711     +SBIW R26 , 1
                 	__GETW1P
00019e 87ea      	STD  Y+10,R30
00019f 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
0001a0 fd00      	SBRC R16,0
0001a1 c010      	RJMP _0x2000047
                 _0x2000048:
0001a2 1715      	CP   R17,R21
0001a3 f470      	BRSH _0x200004A
0001a4 ff07      	SBRS R16,7
0001a5 c008      	RJMP _0x200004B
0001a6 ff02      	SBRS R16,2
0001a7 c004      	RJMP _0x200004C
0001a8 7f0b      	ANDI R16,LOW(251)
0001a9 2f24      	MOV  R18,R20
0001aa 5011      	SUBI R17,LOW(1)
0001ab c001      	RJMP _0x200004D
                 _0x200004C:
0001ac e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001ad c001      	RJMP _0x200004E
                 _0x200004B:
0001ae e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001af d13f      	RCALL SUBOPT_0x0
0001b0 5051      	SUBI R21,LOW(1)
0001b1 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001b2 2f31      	MOV  R19,R17
0001b3 ff01      	SBRS R16,1
0001b4 c016      	RJMP _0x200004F
                 _0x2000050:
0001b5 3030      	CPI  R19,0
0001b6 f099      	BREQ _0x2000052
0001b7 ff03      	SBRS R16,3
0001b8 c006      	RJMP _0x2000053
0001b9 81ee      	LDD  R30,Y+6
0001ba 81ff      	LDD  R31,Y+6+1
0001bb 9125      	LPM  R18,Z+
0001bc 83ee      	STD  Y+6,R30
0001bd 83ff      	STD  Y+6+1,R31
0001be c005      	RJMP _0x2000054
                 _0x2000053:
0001bf 81ae      	LDD  R26,Y+6
0001c0 81bf      	LDD  R27,Y+6+1
0001c1 912d      	LD   R18,X+
0001c2 83ae      	STD  Y+6,R26
0001c3 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001c4 d12a      	RCALL SUBOPT_0x0
0001c5 3050      	CPI  R21,0
0001c6 f009      	BREQ _0x2000055
0001c7 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001c8 5031      	SUBI R19,LOW(1)
0001c9 cfeb      	RJMP _0x2000050
                 _0x2000052:
0001ca c048      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001cb e320      	LDI  R18,LOW(48)
0001cc 81ee      	LDD  R30,Y+6
0001cd 81ff      	LDD  R31,Y+6+1
0001ce d18a      	RCALL __GETW1PF
0001cf 87e8      	STD  Y+8,R30
0001d0 87f9      	STD  Y+8+1,R31
0001d1 81ee      	LDD  R30,Y+6
0001d2 81ff      	LDD  R31,Y+6+1
0001d3 9632      	ADIW R30,2
0001d4 83ee      	STD  Y+6,R30
0001d5 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001d6 85e8      	LDD  R30,Y+8
0001d7 85f9      	LDD  R31,Y+8+1
0001d8 85aa      	LDD  R26,Y+10
0001d9 85bb      	LDD  R27,Y+10+1
0001da 17ae      	CP   R26,R30
0001db 07bf      	CPC  R27,R31
0001dc f050      	BRLO _0x200005C
0001dd 5f2f      	SUBI R18,-LOW(1)
0001de 85a8      	LDD  R26,Y+8
0001df 85b9      	LDD  R27,Y+8+1
0001e0 85ea      	LDD  R30,Y+10
0001e1 85fb      	LDD  R31,Y+10+1
0001e2 1bea      	SUB  R30,R26
0001e3 0bfb      	SBC  R31,R27
0001e4 87ea      	STD  Y+10,R30
0001e5 87fb      	STD  Y+10+1,R31
0001e6 cfef      	RJMP _0x200005A
                 _0x200005C:
0001e7 332a      	CPI  R18,58
0001e8 f028      	BRLO _0x200005D
0001e9 ff03      	SBRS R16,3
0001ea c002      	RJMP _0x200005E
0001eb 5f29      	SUBI R18,-LOW(7)
0001ec c001      	RJMP _0x200005F
                 _0x200005E:
0001ed 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001ee fd04      	SBRC R16,4
0001ef c019      	RJMP _0x2000061
0001f0 3321      	CPI  R18,49
0001f1 f420      	BRSH _0x2000063
0001f2 85a8      	LDD  R26,Y+8
0001f3 85b9      	LDD  R27,Y+8+1
0001f4 9711      	SBIW R26,1
0001f5 f409      	BRNE _0x2000062
                 _0x2000063:
0001f6 c009      	RJMP _0x20000CD
                 _0x2000062:
0001f7 1753      	CP   R21,R19
0001f8 f010      	BRLO _0x2000067
0001f9 ff00      	SBRS R16,0
0001fa c001      	RJMP _0x2000068
                 _0x2000067:
0001fb c011      	RJMP _0x2000066
                 _0x2000068:
0001fc e220      	LDI  R18,LOW(32)
0001fd ff07      	SBRS R16,7
0001fe c00a      	RJMP _0x2000069
0001ff e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000200 6100      	ORI  R16,LOW(16)
000201 ff02      	SBRS R16,2
000202 c006      	RJMP _0x200006A
000203 7f0b      	ANDI R16,LOW(251)
000204 934a      	ST   -Y,R20
000205 d0f6      	RCALL SUBOPT_0x2
000206 3050      	CPI  R21,0
000207 f009      	BREQ _0x200006B
000208 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000209 d0e5      	RCALL SUBOPT_0x0
00020a 3050      	CPI  R21,0
00020b f009      	BREQ _0x200006C
00020c 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00020d 5031      	SUBI R19,LOW(1)
00020e 85a8      	LDD  R26,Y+8
00020f 85b9      	LDD  R27,Y+8+1
000210 9712      	SBIW R26,2
000211 f008      	BRLO _0x2000059
000212 cfb8      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000213 ff00      	SBRS R16,0
000214 c007      	RJMP _0x200006D
                 _0x200006E:
000215 3050      	CPI  R21,0
000216 f029      	BREQ _0x2000070
000217 5051      	SUBI R21,LOW(1)
000218 e2e0      	LDI  R30,LOW(32)
000219 93ea      	ST   -Y,R30
00021a d0e1      	RCALL SUBOPT_0x2
00021b cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00021c e010      	LDI  R17,LOW(0)
                 _0x200001B:
00021d ceea      	RJMP _0x2000016
                 _0x2000018:
00021e 85ac      	LDD  R26,Y+12
00021f 85bd      	LDD  R27,Y+12+1
000220 91ed      	LD   R30,X+
000221 91fd      	LD   R31,X+
000222 d0fb      	RCALL __LOADLOCR6
000223 9664      	ADIW R28,20
000224 9508      	RET
                 ; .FEND
                 _put_lcd_G100:
                 ; .FSTART _put_lcd_G100
000225 d0f3      	RCALL __SAVELOCR4
000226 018d      	MOVW R16,R26
000227 813c      	LDD  R19,Y+4
000228 2fa3      	MOV  R26,R19
000229 d087      	RCALL _lcd_putchar
00022a 01d8      	MOVW R26,R16
00022b 91ed      	LD   R30,X+
00022c 91fd      	LD   R31,X+
00022d 9631      	ADIW R30,1
00022e 93fe      	ST   -X,R31
00022f 93ee      	ST   -X,R30
000230 d0ef      	RCALL __LOADLOCR4
000231 9625      	ADIW R28,5
000232 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
000233 92ff      	PUSH R15
000234 2ef8      	MOV  R15,R24
000235 9726      	SBIW R28,6
000236 931a      	ST   -Y,R17
000237 930a      	ST   -Y,R16
000238 01de      	MOVW R26,R28
000239 9614      	ADIW R26,4
                +
00023a 2400     +CLR R0
00023b 0daf     +ADD R26 , R15
00023c 1db0     +ADC R27 , R0
                 	__ADDW2R15
00023d 018d      	MOVW R16,R26
00023e e0e0      	LDI  R30,LOW(0)
00023f 83ec      	STD  Y+4,R30
000240 83ed      	STD  Y+4+1,R30
000241 83ee      	STD  Y+6,R30
000242 83ef      	STD  Y+6+1,R30
000243 01de      	MOVW R26,R28
000244 9618      	ADIW R26,8
                +
000245 2400     +CLR R0
000246 0daf     +ADD R26 , R15
000247 1db0     +ADC R27 , R0
                 	__ADDW2R15
000248 91ed      	LD   R30,X+
000249 91fd      	LD   R31,X+
00024a 93fa      	ST   -Y,R31
00024b 93ea      	ST   -Y,R30
00024c 931a      	ST   -Y,R17
00024d 930a      	ST   -Y,R16
00024e e2e5      	LDI  R30,LOW(_put_lcd_G100)
00024f e0f2      	LDI  R31,HIGH(_put_lcd_G100)
000250 93fa      	ST   -Y,R31
000251 93ea      	ST   -Y,R30
000252 01de      	MOVW R26,R28
000253 9618      	ADIW R26,8
000254 dea8      	RCALL __print_G100
000255 8119      	LDD  R17,Y+1
000256 8108      	LDD  R16,Y+0
000257 9628      	ADIW R28,8
000258 90ff      	POP  R15
000259 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00025a 93ba      	ST   -Y,R27
00025b 93aa      	ST   -Y,R26
00025c 91a9          ld   r26,y+
00025d 91b9          ld   r27,y+
00025e 27ee          clr  r30
00025f 27ff          clr  r31
                 strlen0:
000260 916d          ld   r22,x+
000261 2366          tst  r22
000262 f011          breq strlen1
000263 9631          adiw r30,1
000264 cffb          rjmp strlen0
                 strlen1:
000265 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000266 93ba      	ST   -Y,R27
000267 93aa      	ST   -Y,R26
000268 27aa          clr  r26
000269 27bb          clr  r27
00026a 91e9          ld   r30,y+
00026b 91f9          ld   r31,y+
                 strlenf0:
00026c 9005      	lpm  r0,z+
00026d 2000          tst  r0
00026e f011          breq strlenf1
00026f 9611          adiw r26,1
000270 cffb          rjmp strlenf0
                 strlenf1:
000271 01fd          movw r30,r26
000272 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
000273 931a      	ST   -Y,R17
000274 2f1a      	MOV  R17,R26
000275 b3eb      	IN   R30,0x1B
000276 70ef      	ANDI R30,LOW(0xF)
000277 2fae      	MOV  R26,R30
000278 2fe1      	MOV  R30,R17
000279 7fe0      	ANDI R30,LOW(0xF0)
00027a 2bea      	OR   R30,R26
00027b bbeb      	OUT  0x1B,R30
                +
00027c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00027d 958a     +DEC R24
00027e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00027f 9ada      	SBI  0x1B,2
                +
000280 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000281 958a     +DEC R24
000282 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000283 98da      	CBI  0x1B,2
                +
000284 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000285 958a     +DEC R24
000286 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000287 c065      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000288 93aa      	ST   -Y,R26
000289 81a8      	LD   R26,Y
00028a dfe8      	RCALL __lcd_write_nibble_G103
00028b 81e8          ld    r30,y
00028c 95e2          swap  r30
00028d 83e8          st    y,r30
00028e 81a8      	LD   R26,Y
00028f dfe3      	RCALL __lcd_write_nibble_G103
                +
000290 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000291 958a     +DEC R24
000292 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000293 9621      	ADIW R28,1
000294 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000295 931a      	ST   -Y,R17
000296 930a      	ST   -Y,R16
000297 2f1a      	MOV  R17,R26
000298 810a      	LDD  R16,Y+2
000299 2fe1      	MOV  R30,R17
00029a e0f0      	LDI  R31,0
00029b 59ec      	SUBI R30,LOW(-__base_y_G103)
00029c 4ffe      	SBCI R31,HIGH(-__base_y_G103)
00029d 81e0      	LD   R30,Z
00029e 0fe0      	ADD  R30,R16
00029f 2fae      	MOV  R26,R30
0002a0 dfe7      	RCALL __lcd_write_data
0002a1 2e50      	MOV  R5,R16
0002a2 2e41      	MOV  R4,R17
0002a3 8119      	LDD  R17,Y+1
0002a4 8108      	LDD  R16,Y+0
0002a5 9623      	ADIW R28,3
0002a6 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002a7 e0a2      	LDI  R26,LOW(2)
0002a8 d063      	RCALL SUBOPT_0x4
0002a9 e0ac      	LDI  R26,LOW(12)
0002aa dfdd      	RCALL __lcd_write_data
0002ab e0a1      	LDI  R26,LOW(1)
0002ac d05f      	RCALL SUBOPT_0x4
0002ad e0e0      	LDI  R30,LOW(0)
0002ae 2e4e      	MOV  R4,R30
0002af 2e5e      	MOV  R5,R30
0002b0 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002b1 931a      	ST   -Y,R17
0002b2 2f1a      	MOV  R17,R26
0002b3 301a      	CPI  R17,10
0002b4 f011      	BREQ _0x2060005
0002b5 1457      	CP   R5,R7
0002b6 f038      	BRLO _0x2060004
                 _0x2060005:
0002b7 e0e0      	LDI  R30,LOW(0)
0002b8 93ea      	ST   -Y,R30
0002b9 9443      	INC  R4
0002ba 2da4      	MOV  R26,R4
0002bb dfd9      	RCALL _lcd_gotoxy
0002bc 301a      	CPI  R17,10
0002bd f179      	BREQ _0x20C0001
                 _0x2060004:
0002be 9453      	INC  R5
0002bf 9ad8      	SBI  0x1B,0
0002c0 2fa1      	MOV  R26,R17
0002c1 dfc6      	RCALL __lcd_write_data
0002c2 98d8      	CBI  0x1B,0
0002c3 c029      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002c4 931a      	ST   -Y,R17
0002c5 2f1a      	MOV  R17,R26
0002c6 b3ea      	IN   R30,0x1A
0002c7 6fe0      	ORI  R30,LOW(0xF0)
0002c8 bbea      	OUT  0x1A,R30
0002c9 9ad2      	SBI  0x1A,2
0002ca 9ad0      	SBI  0x1A,0
0002cb 9ad1      	SBI  0x1A,1
0002cc 98da      	CBI  0x1B,2
0002cd 98d8      	CBI  0x1B,0
0002ce 98d9      	CBI  0x1B,1
0002cf 2e71      	MOV  R7,R17
0002d0 2fe1      	MOV  R30,R17
0002d1 58e0      	SUBI R30,-LOW(128)
                +
0002d2 93e0 0166+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
0002d4 2fe1      	MOV  R30,R17
0002d5 54e0      	SUBI R30,-LOW(192)
                +
0002d6 93e0 0167+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
0002d8 e1a4      	LDI  R26,LOW(20)
0002d9 e0b0      	LDI  R27,0
0002da d087      	RCALL _delay_ms
0002db d034      	RCALL SUBOPT_0x5
0002dc d033      	RCALL SUBOPT_0x5
0002dd d032      	RCALL SUBOPT_0x5
0002de e2a0      	LDI  R26,LOW(32)
0002df df93      	RCALL __lcd_write_nibble_G103
                +
0002e0 ec88     +LDI R24 , LOW ( 200 )
0002e1 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002e2 9701     +SBIW R24 , 1
0002e3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002e4 e2a8      	LDI  R26,LOW(40)
0002e5 dfa2      	RCALL __lcd_write_data
0002e6 e0a4      	LDI  R26,LOW(4)
0002e7 dfa0      	RCALL __lcd_write_data
0002e8 e8a5      	LDI  R26,LOW(133)
0002e9 df9e      	RCALL __lcd_write_data
0002ea e0a6      	LDI  R26,LOW(6)
0002eb df9c      	RCALL __lcd_write_data
0002ec dfba      	RCALL _lcd_clear
                 _0x20C0001:
0002ed 9119      	LD   R17,Y+
0002ee 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G102:
000160           	.BYTE 0x4
                 __base_y_G103:
000164           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x0:
0002ef 932a      	ST   -Y,R18
0002f0 85ad      	LDD  R26,Y+13
0002f1 85be      	LDD  R27,Y+13+1
0002f2 85ef      	LDD  R30,Y+15
0002f3 89f8      	LDD  R31,Y+15+1
0002f4 9509      	ICALL
0002f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x1:
0002f6 89e8      	LDD  R30,Y+16
0002f7 89f9      	LDD  R31,Y+16+1
0002f8 9734      	SBIW R30,4
0002f9 8be8      	STD  Y+16,R30
0002fa 8bf9      	STD  Y+16+1,R31
0002fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
0002fc 85ad      	LDD  R26,Y+13
0002fd 85be      	LDD  R27,Y+13+1
0002fe 85ef      	LDD  R30,Y+15
0002ff 89f8      	LDD  R31,Y+15+1
000300 9509      	ICALL
000301 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000302 89a8      	LDD  R26,Y+16
000303 89b9      	LDD  R27,Y+16+1
000304 9614      	ADIW R26,4
000305 91ed      	LD   R30,X+
000306 91fd      	LD   R31,X+
000307 83ee      	STD  Y+6,R30
000308 83ff      	STD  Y+6+1,R31
000309 81ae      	LDD  R26,Y+6
00030a 81bf      	LDD  R27,Y+6+1
00030b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00030c df7b      	RCALL __lcd_write_data
00030d e0a3      	LDI  R26,LOW(3)
00030e e0b0      	LDI  R27,0
00030f c052      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
000310 e3a0      	LDI  R26,LOW(48)
000311 df61      	RCALL __lcd_write_nibble_G103
                +
000312 ec88     +LDI R24 , LOW ( 200 )
000313 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000314 9701     +SBIW R24 , 1
000315 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000316 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000317 935a      	ST   -Y,R21
                 __SAVELOCR5:
000318 934a      	ST   -Y,R20
                 __SAVELOCR4:
000319 933a      	ST   -Y,R19
                 __SAVELOCR3:
00031a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00031b 931a      	ST   -Y,R17
00031c 930a      	ST   -Y,R16
00031d 9508      	RET
                 
                 __LOADLOCR6:
00031e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00031f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000320 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000321 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000322 8119      	LDD  R17,Y+1
000323 8108      	LD   R16,Y
000324 9508      	RET
                 
                 __ANEGW1:
000325 95f1      	NEG  R31
000326 95e1      	NEG  R30
000327 40f0      	SBCI R31,0
000328 9508      	RET
                 
                 __DIVW21U:
000329 2400      	CLR  R0
00032a 2411      	CLR  R1
00032b e190      	LDI  R25,16
                 __DIVW21U1:
00032c 0faa      	LSL  R26
00032d 1fbb      	ROL  R27
00032e 1c00      	ROL  R0
00032f 1c11      	ROL  R1
000330 1a0e      	SUB  R0,R30
000331 0a1f      	SBC  R1,R31
000332 f418      	BRCC __DIVW21U2
000333 0e0e      	ADD  R0,R30
000334 1e1f      	ADC  R1,R31
000335 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000336 60a1      	SBR  R26,1
                 __DIVW21U3:
000337 959a      	DEC  R25
000338 f799      	BRNE __DIVW21U1
000339 01fd      	MOVW R30,R26
00033a 01d0      	MOVW R26,R0
00033b 9508      	RET
                 
                 __DIVW21:
00033c d00e      	RCALL __CHKSIGNW
00033d dfeb      	RCALL __DIVW21U
00033e f40e      	BRTC __DIVW211
00033f dfe5      	RCALL __ANEGW1
                 __DIVW211:
000340 9508      	RET
                 
                 __MANDW12:
000341 94e8      	CLT
000342 fff7      	SBRS R31,7
000343 c002      	RJMP __MANDW121
000344 dfe0      	RCALL __ANEGW1
000345 9468      	SET
                 __MANDW121:
000346 23ea      	AND  R30,R26
000347 23fb      	AND  R31,R27
000348 f40e      	BRTC __MANDW122
000349 dfdb      	RCALL __ANEGW1
                 __MANDW122:
00034a 9508      	RET
                 
                 __CHKSIGNW:
00034b 94e8      	CLT
00034c fff7      	SBRS R31,7
00034d c002      	RJMP __CHKSW1
00034e dfd6      	RCALL __ANEGW1
00034f 9468      	SET
                 __CHKSW1:
000350 ffb7      	SBRS R27,7
000351 c006      	RJMP __CHKSW2
000352 95b1      	NEG  R27
000353 95a1      	NEG  R26
000354 40b0      	SBCI R27,0
000355 f800      	BLD  R0,0
000356 9403      	INC  R0
000357 fa00      	BST  R0,0
                 __CHKSW2:
000358 9508      	RET
                 
                 __GETW1PF:
000359 9005      	LPM  R0,Z+
00035a 91f4      	LPM  R31,Z
00035b 2de0      	MOV  R30,R0
00035c 9508      	RET
                 
                 __PUTPARD1:
00035d 937a      	ST   -Y,R23
00035e 936a      	ST   -Y,R22
00035f 93fa      	ST   -Y,R31
000360 93ea      	ST   -Y,R30
000361 9508      	RET
                 
                 _delay_ms:
000362 9610      	adiw r26,0
000363 f039      	breq __delay_ms1
                 __delay_ms0:
000364 95a8      	wdr
                +
000365 ed80     +LDI R24 , LOW ( 0x7D0 )
000366 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000367 9701     +SBIW R24 , 1
000368 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000369 9711      	sbiw r26,1
00036a f7c9      	brne __delay_ms0
                 __delay_ms1:
00036b 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  21 r1 :   5 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  43 r17:  42 r18:  27 r19:  12 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   7 r26:  86 r27:  34 r28:  12 r29:   1 r30: 167 r31:  58 
x  :  21 y  : 136 z  :  14 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   5 
adiw  :  18 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  15 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   1 brmi  :   0 brne  :  41 brpl  :   1 brsh  :   2 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :   0 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  44 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   3 jmp   :  22 ld    :  24 ldd   :  59 ldi   :  99 
lds   :   0 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  32 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  60 ret   :  36 
reti  :   0 rjmp  :  81 rol   :   3 ror   :   0 sbc   :   2 sbci  :   4 
sbi   :  11 sbic  :   0 sbis  :  12 sbiw  :  14 sbr   :   1 sbrc  :   2 
sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  46 std   :  30 sts   :   2 sub   :   2 subi  :  17 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 62 out of 116 (53.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006d8   1702     50   1752   16384  10.7%
[.dseg] 0x000060 0x000168      0      8      8    1024   0.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
